<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Ethan的博客]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://sgq.me/"/>
  <updated>2016-02-19T12:22:45.908Z</updated>
  <id>http://sgq.me/</id>
  
  <author>
    <name><![CDATA[Ethan]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[利用AJAX和history.replaceState无刷新的改变页面URL]]></title>
    <link href="http://sgq.me/2016/02/19/ajax-history-replacestate/"/>
    <id>http://sgq.me/2016/02/19/ajax-history-replacestate/</id>
    <published>2016-02-19T12:21:00.000Z</published>
    <updated>2016-02-19T12:22:45.908Z</updated>
    <content type="html"><![CDATA[<p>在以往我们需要改变URL的参数时，我会通过修改<code>window.location.search</code>来实现。但这必然会导致页面的再次刷新，这不是我们想看到的结果。</p>
<p>最近我的项目中由于一个基础库的bug(短时间内还没办法去修改(〃＞皿＜))必须通过修改url参数来实现一些功能，需要增加的参数存储在<code>sessionStorage.dataSearch</code>中，具体代码如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(location.search.length == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(history.replaceState)</span><br><span class="line">    &#123;</span><br><span class="line">        history.replaceState(<span class="literal">null</span>,<span class="literal">null</span>,sessionStorage.dataSearch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        location.search = sessionStorage.dataSearch;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>说到这个<code>history.replaceState</code>我们就不得不提<code>history.pushStat</code>和<code>history.replaceState</code>这些API了。<br><a id="more"></a></p>
<p><code>pushState</code>是将指定的URL添加到浏览器历史里，<code>replaceState</code>是将指定的URL替换当前的URL。</p>
<p>###API的使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> state = &#123;</span><br><span class="line">    title: title,</span><br><span class="line">    url: options.url,</span><br><span class="line">    otherkey: othervalue</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">window</span>.history.pushState(state, <span class="built_in">document</span>.title, url);</span><br></pre></td></tr></table></figure></p>
<p>state对象除了要title和url之外，你也可以添加其他的数据，比如：还想将一些发送ajax的配置给保存起来。<br><code>replaceState</code>和<code>pushState</code>是相似的，这里就不多介绍了。</p>
<p>###响应浏览器的前进、后退操作<br><code>window</code>对象上提供了<code>onpopstate</code>事件，上面传递的state对象会成为event的子对象，这样就可以拿到存储的title和URL了。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'popstate'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (history.state)&#123;</span><br><span class="line">    <span class="keyword">var</span> state = e.state;</span><br><span class="line">    <span class="comment">//do something(state.url, state.title);</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure></p>
<p>这样就可以结合ajax和pushState完美的进行无刷新浏览了。</p>
<p>###一些注意点</p>
<ul>
<li>无论是<code>history.pushStat</code>还是<code>history.replaceState</code>，其URL必须是同一域名下的，跨域是万万做不到的。</li>
<li>state对象虽然可以存储很多自定义的属性，但对于不可序列化的对象则不能存储，如：DOM对象。</li>
</ul>
<p>###浏览器兼容性<br>当前主流浏览器基本都已经支持了这一特性，当然，IE需要IE10以上<br><img src="http://ww1.sinaimg.cn/large/6ac54b93gw1f14ftcmfh8j20ip0fggpy.jpg" alt="浏览器兼容性"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在以往我们需要改变URL的参数时，我会通过修改<code>window.location.search</code>来实现。但这必然会导致页面的再次刷新，这不是我们想看到的结果。</p>
<p>最近我的项目中由于一个基础库的bug(短时间内还没办法去修改(〃＞皿＜))必须通过修改url参数来实现一些功能，需要增加的参数存储在<code>sessionStorage.dataSearch</code>中，具体代码如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(location.search.length == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(history.replaceState)</span><br><span class="line">    &#123;</span><br><span class="line">        history.replaceState(<span class="literal">null</span>,<span class="literal">null</span>,sessionStorage.dataSearch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        location.search = sessionStorage.dataSearch;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>说到这个<code>history.replaceState</code>我们就不得不提<code>history.pushStat</code>和<code>history.replaceState</code>这些API了。<br>]]>
    
    </summary>
    
      <category term="ajax" scheme="http://sgq.me/tags/ajax/"/>
    
      <category term="history.pushState" scheme="http://sgq.me/tags/history-pushState/"/>
    
      <category term="history.replaceState" scheme="http://sgq.me/tags/history-replaceState/"/>
    
      <category term="html5" scheme="http://sgq.me/tags/html5/"/>
    
      <category term="javascript" scheme="http://sgq.me/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP中CURL使用HTTPS协议相关处理]]></title>
    <link href="http://sgq.me/2016/01/26/php-curl-https/"/>
    <id>http://sgq.me/2016/01/26/php-curl-https/</id>
    <published>2016-01-26T12:21:00.000Z</published>
    <updated>2016-01-27T11:33:09.782Z</updated>
    <content type="html"><![CDATA[<p>最近使用到HTTPS协议下的CURL，鉴于现在网上的信息都比较杂乱，没有比较全面合适的信息，故此进行相关的整理与说明。而具体HTTP和HTTPS在协议方面有哪些不同，我会在另外一篇文章里面进行大概的说明。</p>
<p>我们都比较熟悉CURL中HTTP协议的获取，当遇到HTTPS时，在初始化的设置方面就稍显复杂了。我们首先从HTTP的初始化说起。</p>
<p>在PHP的CURL中，使用HTTP协议时可以如下进行初始化,具体信息可以看<a href="http://php.net/manual/zh/book.curl.php" target="_blank" rel="external">手册</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="comment">// 创建一个新cURL资源</span></span><br><span class="line"><span class="variable">$ch</span> = curl_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置URL和相应的选项</span></span><br><span class="line"><span class="variable">$options</span> = <span class="keyword">array</span>(CURLOPT_URL =&gt; <span class="string">'http://www.example.com/'</span>,</span><br><span class="line">                 CURLOPT_HEADER =&gt; <span class="keyword">false</span></span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">curl_setopt_array(<span class="variable">$ch</span>, <span class="variable">$options</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抓取URL并把它传递给浏览器</span></span><br><span class="line">curl_exec(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭cURL资源，并且释放系统资源</span></span><br><span class="line">curl_close(<span class="variable">$ch</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>但是在使用HTTPS协议时，我们有一个准备工作首先要进行操作。<br><a id="more"></a></p>
<p>我们先要导出网站的SSL证书以便处理加密操作，在FireFox中可按照如下步骤进行</p>
<ol>
<li>进入证书查看</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/6ac54b93gw1f0e9a04mmpj20bb05bt97.jpg" alt="证书查看1"></p>
<p><img src="http://ww4.sinaimg.cn/large/6ac54b93gw1f0e9anijn8j20bl06c0tc.jpg" alt="证书查看2"></p>
<ol>
<li>选择需要导出的证书项</li>
</ol>
<p><img src="http://ww4.sinaimg.cn/large/6ac54b93gw1f0e9ccj33mj20gk0f6why.jpg" alt="选择需要导出的证书1"></p>
<p><img src="http://ww1.sinaimg.cn/large/6ac54b93gw1f0e9cy3gmej20fl0i0q4z.jpg" alt="选择需要倒数的证书2"></p>
<ol>
<li>选择导出的类型并进行存储</li>
</ol>
<p><img src="http://ww3.sinaimg.cn/large/6ac54b93gw1f0e9dstupmj20qi0et76v.jpg" alt="选择证书类型"></p>
<p>在导出完证书后，我们在curl_setopt_array的参数中只要设置该证书的文件地址就可以使用了，如果这个站点需要存储登录态的话还要设置cookie的文件地址，具体信息可查看如下代码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//详细文件地址</span></span><br><span class="line"><span class="variable">$caDir</span> = <span class="string">'....../GeoTrustGlobalCA.crt'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//存储cookie信息的文件地址</span></span><br><span class="line"><span class="variable">$cookieDir</span> = <span class="string">'......'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//URL地址</span></span><br><span class="line"><span class="variable">$url</span> = <span class="string">'https://www.zhihu.com/......'</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$defaultOpt</span> = <span class="keyword">array</span>(</span><br><span class="line">	CURLOPT_RETURNTRANSFER =&gt; <span class="keyword">true</span>,     <span class="comment">// return web page</span></span><br><span class="line">	CURLOPT_HEADER         =&gt; <span class="keyword">false</span>,    <span class="comment">// don't return headers</span></span><br><span class="line">	CURLOPT_FOLLOWLOCATION =&gt; <span class="keyword">true</span>,     <span class="comment">// follow redirects</span></span><br><span class="line">	CURLOPT_ENCODING       =&gt; <span class="string">""</span>,       <span class="comment">// handle all encodings</span></span><br><span class="line">	CURLOPT_USERAGENT      =&gt; <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.80 Safari/537.36"</span>,</span><br><span class="line">	CURLOPT_AUTOREFERER    =&gt; <span class="keyword">true</span>,     <span class="comment">// set referer on redirect</span></span><br><span class="line">	CURLOPT_CONNECTTIMEOUT =&gt; <span class="number">120</span>,      <span class="comment">// timeout on connect</span></span><br><span class="line">	CURLOPT_TIMEOUT        =&gt; <span class="number">120</span>,      <span class="comment">// timeout on response</span></span><br><span class="line">	CURLOPT_MAXREDIRS      =&gt; <span class="number">10</span>,       <span class="comment">// stop after 10 redirects</span></span><br><span class="line">	CURLOPT_SSL_VERIFYPEER =&gt; <span class="keyword">true</span>,     <span class="comment">// enabled SSL Cert checks</span></span><br><span class="line">	CURLOPT_SSL_VERIFYHOST =&gt; <span class="number">2</span>,</span><br><span class="line">	CURLOPT_CAINFO         =&gt; <span class="variable">$caDir</span>,</span><br><span class="line">	CURLOPT_COOKIEFILE     =&gt; <span class="variable">$cookieDir</span>,</span><br><span class="line">	CURLOPT_COOKIEJAR      =&gt; <span class="variable">$cookieDir</span>,</span><br><span class="line">	CURLOPT_URL			   =&gt; <span class="variable">$url</span>,</span><br><span class="line">	CURLOPT_HTTPGET		   =&gt; <span class="keyword">true</span>		<span class="comment">//method is GET</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$handle</span> = curl_init();</span><br><span class="line"></span><br><span class="line">curl_setopt_array(<span class="variable">$handle</span>,<span class="variable">$arrOpt</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$content</span> = curl_exec(<span class="variable">$handle</span>);</span><br><span class="line"><span class="variable">$err</span>     = curl_errno(<span class="variable">$handle</span>);</span><br><span class="line"><span class="variable">$errmsg</span>  = curl_error(<span class="variable">$handle</span>);</span><br><span class="line"><span class="variable">$header</span>  = curl_getinfo(<span class="variable">$handle</span>);</span><br><span class="line"></span><br><span class="line">curl_close(<span class="variable">$handle</span>);</span><br><span class="line"></span><br><span class="line">printf(<span class="string">"Content is %s"</span>, <span class="variable">$content</span>);</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>最近使用到HTTPS协议下的CURL，鉴于现在网上的信息都比较杂乱，没有比较全面合适的信息，故此进行相关的整理与说明。而具体HTTP和HTTPS在协议方面有哪些不同，我会在另外一篇文章里面进行大概的说明。</p>
<p>我们都比较熟悉CURL中HTTP协议的获取，当遇到HTTPS时，在初始化的设置方面就稍显复杂了。我们首先从HTTP的初始化说起。</p>
<p>在PHP的CURL中，使用HTTP协议时可以如下进行初始化,具体信息可以看<a href="http://php.net/manual/zh/book.curl.php">手册</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="comment">// 创建一个新cURL资源</span></span><br><span class="line"><span class="variable">$ch</span> = curl_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置URL和相应的选项</span></span><br><span class="line"><span class="variable">$options</span> = <span class="keyword">array</span>(CURLOPT_URL =&gt; <span class="string">'http://www.example.com/'</span>,</span><br><span class="line">                 CURLOPT_HEADER =&gt; <span class="keyword">false</span></span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">curl_setopt_array(<span class="variable">$ch</span>, <span class="variable">$options</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抓取URL并把它传递给浏览器</span></span><br><span class="line">curl_exec(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭cURL资源，并且释放系统资源</span></span><br><span class="line">curl_close(<span class="variable">$ch</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>但是在使用HTTPS协议时，我们有一个准备工作首先要进行操作。<br>]]>
    
    </summary>
    
      <category term="curl" scheme="http://sgq.me/tags/curl/"/>
    
      <category term="https" scheme="http://sgq.me/tags/https/"/>
    
      <category term="php" scheme="http://sgq.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP中多线程的使用（二）——内存管理方面的注意点]]></title>
    <link href="http://sgq.me/2016/01/25/php-pthread-memory/"/>
    <id>http://sgq.me/2016/01/25/php-pthread-memory/</id>
    <published>2016-01-25T03:09:00.000Z</published>
    <updated>2016-01-30T06:02:05.118Z</updated>
    <content type="html"><![CDATA[<p>在之前用C/C++开发软件的过程中，可以用线程来共享内存并实现大并发。所以我开发知乎的爬虫系统的时候很自然的就会想到使用共享内存来实现全局的队列，以防止重复爬取某一用户的相关信息。</p>
<p>但问题就出在这共享内存上。出于php中多线程安全方面的考虑，pthreads在启用多线程时默认是没有开启共享内存的。也就是说如果如下面这般是没有任何数据输出的。<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">global</span> <span class="variable">$object</span>, <span class="variable">$array</span>;</span><br><span class="line">		var_dump(<span class="variable">$object</span>, <span class="variable">$array</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> stdClass();</span><br><span class="line"><span class="variable">$object</span>-&gt;one = <span class="string">"one"</span>;</span><br><span class="line"><span class="variable">$object</span>-&gt;two = <span class="string">"two"</span>;</span><br><span class="line"><span class="variable">$object</span>-&gt;three = <span class="string">"three"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$test</span>-&gt;start();</span><br><span class="line"><span class="variable">$test</span>-&gt;join();</span><br></pre></td></tr></table></figure></p>
<p>php最重要的一个特性便是快速开发，因此我们要做的并不是很多，只要在 <code>start()</code> 中设置 <code>PTHREADS_INHERIT_ALL</code> 和 <code>PTHREADS_ALLOW_GLOBALS</code> 这两个参数就可以继承上下文、全局变量了</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">global</span> <span class="variable">$object</span>, <span class="variable">$array</span>;</span><br><span class="line">		var_dump(<span class="variable">$object</span>, <span class="variable">$array</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> stdClass();</span><br><span class="line"><span class="variable">$object</span>-&gt;one = <span class="string">"one"</span>;</span><br><span class="line"><span class="variable">$object</span>-&gt;two = <span class="string">"two"</span>;</span><br><span class="line"><span class="variable">$object</span>-&gt;three = <span class="string">"three"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$test</span>-&gt;start(PTHREADS_INHERIT_ALL | PTHREADS_ALLOW_GLOBALS);</span><br><span class="line"><span class="variable">$test</span>-&gt;join();</span><br></pre></td></tr></table></figure>
<p>但此处的全局变量在进入线程后处于线程安全方面的考虑，线程中保存的是原变量的副本，也就是说，各线程中对该变量的操作互相之间并不会产生影响。</p>
<p>因此，如果要实现线程之间的数据共享我想到的是可以使用一些同步机制外还可以使用redis来做数据同步。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在之前用C/C++开发软件的过程中，可以用线程来共享内存并实现大并发。所以我开发知乎的爬虫系统的时候很自然的就会想到使用共享内存来实现全局的队列，以防止重复爬取某一用户的相关信息。</p>
<p>但问题就出在这共享内存上。出于php中多线程安全方面的考虑，pthreads在启用多线程时默认是没有开启共享内存的。也就是说如果如下面这般是没有任何数据输出的。<br>]]>
    
    </summary>
    
      <category term="php" scheme="http://sgq.me/tags/php/"/>
    
      <category term="pthreads" scheme="http://sgq.me/tags/pthreads/"/>
    
      <category term="全局变量" scheme="http://sgq.me/tags/%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/"/>
    
      <category term="内存管理" scheme="http://sgq.me/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
      <category term="多线程" scheme="http://sgq.me/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP中多线程的使用（一）——pthreads的安装与调试]]></title>
    <link href="http://sgq.me/2016/01/25/windows-pthread/"/>
    <id>http://sgq.me/2016/01/25/windows-pthread/</id>
    <published>2016-01-25T01:48:00.000Z</published>
    <updated>2016-01-27T11:22:00.488Z</updated>
    <content type="html"><![CDATA[<p>近期为了获得真实的数据以便进行相关数据分析与计算，就开始考虑着从知乎获取一些问答数据，毕竟知乎回答的质量在国内各大社区中还算不错的了。一开始准备C++去开发的，虽然语言只是一种手段，但奈何时间紧、我对C++还不是非常熟悉。没办法，只能够用最熟的PHP顶上去，等以后有空了再迁移到C++吧。<br>在开发一开始就规划着使用多线程以便并发抓取，从实际情况来说这一功能是实现了的，但PHP利用pthreads实现的多线程在共享内存方面出于安全性的考虑，默认是没有开启共享内存的。这让我浪费了一点时间去解决问题，这我以后专门写一下吧。</p>
<p>这里主要完成windows平台中pthreads的安装与测试，因为通过我自己的测试，网上其他的好多文章都没办法成功呢，故专门写一篇。</p>
<p>关于Linux下面的扩展可以参考<a href="http://zyan.cc/pthreads/" target="_blank" rel="external">PHP真正多线程的使用</a>这篇文章,当然我以后也会在迁移的时候写一下。<br><a id="more"></a></p>
<h3 id="windows_u73AF_u5883_u4E0Bpthreads_u7248_u672C_u7684_u9009_u62E9"><a href="#windows_u73AF_u5883_u4E0Bpthreads_u7248_u672C_u7684_u9009_u62E9" class="headerlink" title="windows环境下pthreads版本的选择"></a>windows环境下pthreads版本的选择</h3><p>在选择pthreads的版本时需要注意一下几点：</p>
<ul>
<li>php本身的版本，php7及其以上的版本需要pthreads v3,而php5则只能够使用pthreads v2</li>
<li>通过查看phpinfo()查看是否是线程安全版（Thread Safety）。关于线程安全可以看Laruence的 <a href="http://www.laruence.com/2008/08/03/201.html" target="_blank" rel="external">揭秘TSRM</a> 以及Walu同学的 <a href="http://www.walu.cc/phpbook/1.4.md" target="_blank" rel="external">线程安全与非线程安全</a></li>
<li>在windows环境中需要考虑到其编译环境是vc9还是vc11</li>
</ul>
<p>通过查看phpinfo()获知我目前的环境是x64，php5.5，Thread Safety和MSVC11那么我们就去 <a href="http://windows.php.net/downloads/pecl/releases/pthreads/" target="_blank" rel="external">下载</a> pthreads-2.0.10-5.5-ts-vc11-x64</p>
<p><img src="http://ww4.sinaimg.cn/large/6ac54b93gw1f0awwxeds4j20gv0klq6p.jpg" alt="相关信息获取"></p>
<h3 id="pthreads_u7684_u5B89_u88C5"><a href="#pthreads_u7684_u5B89_u88C5" class="headerlink" title="pthreads的安装"></a>pthreads的安装</h3><p>在下载的压缩包中，主要使用到 php_pthreads.dll 和 pthreadVC2.dll 这两个文件。</p>
<p>pthreadVC2.dll 需要放置到如下目录中：</p>
<ul>
<li>php.exe 同等级的目录中</li>
<li>httpd.exe同等级的目录中</li>
</ul>
<p>php_pthreads.dll需要放置到php的扩展目录中，一般在 bin\php\ext 文件夹下面</p>
<p>同时需要在 apache 以及 php 两个目录下的php.ini文件中增加 <code>extension=php_pthreads.dll</code> 扩展(针对wamp而言)</p>
<h3 id="pthreads_u7684_u6D4B_u8BD5"><a href="#pthreads_u7684_u6D4B_u8BD5" class="headerlink" title="pthreads的测试"></a>pthreads的测试</h3><p>新建index.php文件并复制如下代码运行，若输出”Hello World”则说明安装成功。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AsyncOperation</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(<span class="variable">$arg</span>)</span></span>&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;arg = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$this</span>-&gt;arg)&#123;</span><br><span class="line">            printf(<span class="string">"Hello %s"</span>, <span class="variable">$this</span>-&gt;arg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$thread</span> = <span class="keyword">new</span> AsyncOperation(<span class="string">"World"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$thread</span>-&gt;start())</span><br><span class="line">    <span class="variable">$thread</span>-&gt;join();</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>近期为了获得真实的数据以便进行相关数据分析与计算，就开始考虑着从知乎获取一些问答数据，毕竟知乎回答的质量在国内各大社区中还算不错的了。一开始准备C++去开发的，虽然语言只是一种手段，但奈何时间紧、我对C++还不是非常熟悉。没办法，只能够用最熟的PHP顶上去，等以后有空了再迁移到C++吧。<br>在开发一开始就规划着使用多线程以便并发抓取，从实际情况来说这一功能是实现了的，但PHP利用pthreads实现的多线程在共享内存方面出于安全性的考虑，默认是没有开启共享内存的。这让我浪费了一点时间去解决问题，这我以后专门写一下吧。</p>
<p>这里主要完成windows平台中pthreads的安装与测试，因为通过我自己的测试，网上其他的好多文章都没办法成功呢，故专门写一篇。</p>
<p>关于Linux下面的扩展可以参考<a href="http://zyan.cc/pthreads/">PHP真正多线程的使用</a>这篇文章,当然我以后也会在迁移的时候写一下。<br>]]>
    
    </summary>
    
      <category term="php" scheme="http://sgq.me/tags/php/"/>
    
      <category term="pthreads" scheme="http://sgq.me/tags/pthreads/"/>
    
      <category term="多线程" scheme="http://sgq.me/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用多种IPC技术以及多进程技术实现WEB 远程控制底层硬件]]></title>
    <link href="http://sgq.me/2014/12/05/bs-php-ipc-socket/"/>
    <id>http://sgq.me/2014/12/05/bs-php-ipc-socket/</id>
    <published>2014-12-05T12:21:00.000Z</published>
    <updated>2016-02-22T03:45:21.000Z</updated>
    <content type="html"><![CDATA[<p>刚完成毕业答辩，现在将我做了小半年的毕业设计的核心代码放到博客上以便备用。</p>
<p>我的毕业设计是与另一个同学合作开发的一款家庭远程监控系统。用户能够通过网站页面控制家里一些设备，比如说马上到家之前打开空调、离开家之后检查家门有没有真的关上（针对我这样有强迫症的人来说，这是必须的）等等功能，同时也能够实现监视家里是否有人等。<br>本毕设的核心通信思想就是利用AJAX将数据传递到服务器，服务器通过PIPE、SOCKET技术将发送的命令传递到家庭控制中心（一款小型嵌入式设备），最后家庭控制中心作出相应的操作后返回操作完成确认信号，最终返回到用户界面，其通信流程如下：<br><img src="http://ww3.sinaimg.cn/large/006f3GNlgw1f17ys0405oj30dw09tdfy.jpg" alt="毕设数据结构"><br><a id="more"></a><br>现在把主要的核心代码贴上来：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require_once</span><span class="string">'./safeclass/pipe.class.php'</span>;</span><br><span class="line"><span class="comment">// 配置socket的基本变量</span></span><br><span class="line"><span class="variable">$socketServerIp</span>=<span class="string">"0.0.0.0"</span>;</span><br><span class="line"><span class="variable">$socketPort</span>=<span class="number">8086</span>;</span><br><span class="line"><span class="comment">// 建立、绑定、监听socket</span></span><br><span class="line"><span class="variable">$parentSocket</span>=socket_create(AF_INET,SOCK_STREAM,SOL_TCP)ordie(<span class="string">"Could not create socket :"</span>.socket_strerror(socket_last_error()).<span class="string">"\n"</span>);</span><br><span class="line"><span class="variable">$result</span>=socket_bind(<span class="variable">$parentSocket</span>,<span class="variable">$socketServerIp</span>,<span class="variable">$socketPort</span>)ordie(<span class="string">"Could not bind to socket :"</span>.socket_strerror(socket_last_error()).<span class="string">"\n"</span>);</span><br><span class="line"><span class="variable">$result</span>=socket_listen(<span class="variable">$parentSocket</span>,<span class="number">50</span>)ordie(<span class="string">"Could not set up socket listener :"</span>.socket_strerror(socket_last_error()).<span class="string">"\n"</span>);</span><br><span class="line"><span class="comment">// 产生第一子进程</span></span><br><span class="line"><span class="variable">$firstChild</span>=pcntl_fork();</span><br><span class="line">                </span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * 第一子进程使socket脱离php处理机制，实现后台多进程运行</span><br><span class="line"> * 功能：产生并监听子socket</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$firstChild</span>==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="comment">// 在接收客户端的请求产生子socket的前提下进行相关的信息处理</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$childSocket</span>=socket_accept(<span class="variable">$parentSocket</span>))&#123;</span><br><span class="line">            <span class="comment">// 获取客户端的IP并进行格式化</span></span><br><span class="line">            socket_getpeername(<span class="variable">$childSocket</span>,<span class="variable">$strGuestIp</span>);</span><br><span class="line">            <span class="variable">$arrTmpGuestIp</span>=explode(<span class="string">'.'</span>,<span class="variable">$strGuestIp</span>);</span><br><span class="line">            <span class="variable">$strGuestIp</span>=<span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$arrTmpGuestIpas</span><span class="variable">$ket</span>=&gt;<span class="variable">$val</span>)&#123;</span><br><span class="line">                <span class="variable">$val</span>=sprintf(<span class="string">"%03d"</span>,<span class="variable">$val</span>);</span><br><span class="line">                <span class="variable">$strGuestIp</span>.=<span class="variable">$val</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 产生第二子进程</span></span><br><span class="line">            <span class="variable">$secondChild</span>=pcntl_fork();</span><br><span class="line">                            </span><br><span class="line">            <span class="comment">/*</span><br><span class="line">             * 第二子进程是针对每一个客户端在服务器端产生一个守护进程用来进行独立的socket通信</span><br><span class="line">             * 功能：与客户端进行通信</span><br><span class="line">             */</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$secondChild</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">// 客户端连接成功，发送确认信息给客户端</span></span><br><span class="line">                <span class="variable">$strOutput</span>=<span class="string">'Successful connection !'</span>;</span><br><span class="line">                socket_write(<span class="variable">$childSocket</span>,<span class="variable">$strOutput</span>,strlen(<span class="variable">$strOutput</span>));</span><br><span class="line">                <span class="keyword">unset</span>(<span class="variable">$strOutput</span>);</span><br><span class="line">                <span class="comment">// 用于使循环自然死亡</span></span><br><span class="line">                <span class="keyword">static</span><span class="variable">$strDeathFlag</span>=<span class="number">1</span>;</span><br><span class="line">                <span class="comment">// 用于缓存接收到的数据</span></span><br><span class="line">                <span class="keyword">static</span><span class="variable">$arrInput</span>=<span class="keyword">array</span>();</span><br><span class="line">                <span class="comment">// 用于标记缓存接收到的次序</span></span><br><span class="line">                <span class="keyword">static</span><span class="variable">$strInputFlag</span>=<span class="number">0</span>;</span><br><span class="line">                <span class="comment">// 用于标记是否已经产生发送进程</span></span><br><span class="line">                <span class="keyword">static</span><span class="variable">$strPipeFlag</span>=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(<span class="variable">$strDeathFlag</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable">$strInput</span>=socket_read(<span class="variable">$childSocket</span>,<span class="number">1024</span>))&#123;</span><br><span class="line">                        <span class="comment">// 收到信号后自然死亡</span></span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$strInput</span>==<span class="string">'shutdown'</span>)&#123;</span><br><span class="line">                            <span class="variable">$strDeathFlag</span>=<span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                                        </span><br><span class="line">                        <span class="comment">// 格式化字符串，转化为十进制</span></span><br><span class="line">                        <span class="variable">$arrUnpack</span>=unpack(<span class="string">"C*"</span>,<span class="variable">$strInput</span>);</span><br><span class="line">                        <span class="comment">// 整合数组</span></span><br><span class="line">                        <span class="keyword">if</span>(count(<span class="variable">$arrUnpack</span>)&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                            <span class="variable">$strData</span>=(<span class="variable">$arrUnpack</span>[<span class="number">1</span>]&lt;&lt;<span class="number">8</span>)+<span class="variable">$arrUnpack</span>[<span class="number">2</span>];</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="variable">$strData</span>=<span class="variable">$arrUnpack</span>[<span class="number">1</span>];</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 结束缓存，存入文件中。收到的十六进制数为 0xEEEE，标志结束</span></span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$strData</span>==<span class="number">61166</span>&amp;&amp;<span class="variable">$strInputFlag</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                            <span class="variable">$arrInput</span>[<span class="string">'guestIp'</span>]=<span class="variable">$strGuestIp</span>;</span><br><span class="line">                            <span class="variable">$someContent</span>=<span class="string">'&lt;?php'</span>.<span class="string">"\n"</span>.<span class="string">'$arrInput = '</span>.var_export(<span class="variable">$arrInput</span>,<span class="keyword">true</span>).<span class="string">';'</span>.<span class="string">"\n"</span>.<span class="string">'?&gt;'</span>;</span><br><span class="line">                            <span class="variable">$handle</span> = fopen ( <span class="string">'./houseSafeSituation/'</span> . <span class="variable">$arrInput</span> [<span class="string">'houseId'</span>] . <span class="string">'.txt'</span>, <span class="string">"w+"</span> );</span><br><span class="line">                            fwrite ( <span class="variable">$handle</span>, <span class="variable">$someContent</span> );</span><br><span class="line">                            fclose ( <span class="variable">$handle</span> );</span><br><span class="line">                            <span class="variable">$strInputFlag</span> = <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                                        </span><br><span class="line">                        <span class="comment">// 测试时使用，发送相关信息给客户端</span></span><br><span class="line">                        <span class="variable">$strOutput</span> = <span class="string">'flag:'</span> . <span class="variable">$strInputFlag</span> . <span class="string">'strData:'</span> . <span class="variable">$strData</span> . <span class="string">'houseId'</span> . <span class="variable">$arrInput</span> [<span class="string">'houseId'</span>];</span><br><span class="line">                        socket_write ( <span class="variable">$childSocket</span>, <span class="variable">$strOutput</span>, strlen ( <span class="variable">$strOutput</span> ) );</span><br><span class="line">                        <span class="variable">$strOutput</span> = <span class="keyword">null</span>;</span><br><span class="line">                                        </span><br><span class="line">                        <span class="comment">/*</span><br><span class="line">                         * 开始缓存数据</span><br><span class="line">                         */</span></span><br><span class="line">                        <span class="keyword">switch</span> (<span class="variable">$strInputFlag</span>) &#123;</span><br><span class="line">                            <span class="comment">// 接收住宅号并存入缓存</span></span><br><span class="line">                            <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="comment">// $arrInput ['houseId'] = sprintf ( "%05d", $strData );</span></span><br><span class="line">                                    <span class="variable">$arrInput</span> [<span class="string">'houseId'</span>] = <span class="variable">$strData</span>;</span><br><span class="line">                                    <span class="variable">$strInputFlag</span> = <span class="number">2</span>;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            <span class="comment">// 接收四个LED灯的情况</span></span><br><span class="line">                            <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="comment">// 转换为二进制</span></span><br><span class="line">                                    <span class="variable">$strTmp</span> = <span class="variable">$strData</span>;</span><br><span class="line">                                    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span> ++) &#123;</span><br><span class="line">                                        <span class="variable">$arrInput</span> [<span class="string">'LED'</span> . (<span class="variable">$i</span> + <span class="number">1</span>)] = <span class="variable">$strTmp</span> % <span class="number">2</span>;</span><br><span class="line">                                        <span class="variable">$strTmp</span> = floor ( <span class="variable">$strTmp</span> / <span class="number">2</span> );</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="variable">$strInputFlag</span> = <span class="number">3</span>;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            <span class="comment">// 接收温度</span></span><br><span class="line">                            <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="variable">$arrInput</span> [<span class="string">'temp'</span>] = sprintf ( <span class="string">"%0.1f"</span>, <span class="variable">$strData</span> / <span class="number">10</span> );</span><br><span class="line">                                    <span class="variable">$strInputFlag</span> = <span class="number">4</span>;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            <span class="comment">// 接收相对湿度</span></span><br><span class="line">                            <span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="variable">$arrInput</span> [<span class="string">'hr'</span>] = sprintf ( <span class="string">"%0.1f"</span>, <span class="variable">$strData</span> / <span class="number">10</span> );</span><br><span class="line">                                    <span class="variable">$strInputFlag</span> = <span class="number">5</span>;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            <span class="comment">// 接收检测红外线是否有人</span></span><br><span class="line">                            <span class="keyword">case</span> <span class="number">5</span> :</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="variable">$strData</span>) &#123;</span><br><span class="line">                                        <span class="variable">$arrInput</span> [<span class="string">'isAnyPeople'</span>] = <span class="number">1</span>;</span><br><span class="line">                                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                        <span class="variable">$arrInput</span> [<span class="string">'isAnyPeople'</span>] = <span class="number">0</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="variable">$strInputFlag</span> = <span class="number">6</span>;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            <span class="comment">// 接收烟雾报警器情况</span></span><br><span class="line">                            <span class="keyword">case</span> <span class="number">6</span> :</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="variable">$strData</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                                        <span class="variable">$arrInput</span> [<span class="string">'isfire'</span>] = <span class="number">1</span>;</span><br><span class="line">                                    &#125; <span class="keyword">elseif</span> (<span class="variable">$strData</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                                        <span class="variable">$arrInput</span> [<span class="string">'isfire'</span>] = <span class="number">0</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="variable">$strInputFlag</span> = <span class="number">7</span>;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            <span class="comment">// 接收三个开关的情况</span></span><br><span class="line">                            <span class="keyword">case</span> <span class="number">7</span> :</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="comment">// 转换为二进制</span></span><br><span class="line">                                    <span class="variable">$strTmp</span> = <span class="variable">$strData</span>;</span><br><span class="line">                                    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">3</span>; <span class="variable">$i</span> ++) &#123;</span><br><span class="line">                                        <span class="variable">$arrInput</span> [<span class="string">'switch'</span> . (<span class="variable">$i</span> + <span class="number">1</span>)] = <span class="variable">$strTmp</span> % <span class="number">2</span>;</span><br><span class="line">                                        <span class="variable">$strTmp</span> = floor ( <span class="variable">$strTmp</span> / <span class="number">2</span> );</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="variable">$strInputFlag</span> = <span class="number">8</span>;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            <span class="keyword">default</span> :</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="variable">$strInputFlag</span> = <span class="number">1</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 开始缓存，收到的十六进制数为0xFFFF，标识开始</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="variable">$strData</span> == <span class="number">65535</span>) &#123;</span><br><span class="line">                            <span class="variable">$strInputFlag</span> = <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 条件满足时用来发送从管道中IPC过来的信息</span></span><br><span class="line">                        <span class="keyword">if</span> ((! <span class="variable">$strPipeFlag</span>) &amp;&amp; <span class="variable">$arrInput</span> [<span class="string">'houseId'</span>]) &#123;</span><br><span class="line">                            <span class="variable">$strPipeFlag</span> = <span class="number">1</span>;</span><br><span class="line">                            <span class="variable">$strHouseId</span> = <span class="variable">$arrInput</span> [<span class="string">'houseId'</span>];</span><br><span class="line">                            <span class="comment">// 产生第三子进程</span></span><br><span class="line">                            <span class="variable">$thirdChild</span>=pcntl_fork();</span><br><span class="line">                            <span class="comment">/*</span><br><span class="line">                             * 第三子进程 功能：获取从管道中得到的数据并将其发送给相应的客户端</span><br><span class="line">                             */</span></span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$thirdChild</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                                <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">                                    <span class="keyword">if</span>(<span class="variable">$strPipeData</span>=readPipe(<span class="variable">$strHouseId</span>))&#123;</span><br><span class="line">                                        <span class="keyword">if</span>(socket_write(<span class="variable">$childSocket</span>,<span class="variable">$strPipeData</span>,strlen(<span class="variable">$strPipeData</span>)))&#123;</span><br><span class="line">                                            <span class="comment">// 成功发送后删除Pipe</span></span><br><span class="line">                                            removePipe(<span class="variable">$strHouseId</span>);</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    sleep(<span class="number">0.1</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    sleep(<span class="number">0.1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sleep(<span class="number">0.1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>刚完成毕业答辩，现在将我做了小半年的毕业设计的核心代码放到博客上以便备用。</p>
<p>我的毕业设计是与另一个同学合作开发的一款家庭远程监控系统。用户能够通过网站页面控制家里一些设备，比如说马上到家之前打开空调、离开家之后检查家门有没有真的关上（针对我这样有强迫症的人来说，这是必须的）等等功能，同时也能够实现监视家里是否有人等。<br>本毕设的核心通信思想就是利用AJAX将数据传递到服务器，服务器通过PIPE、SOCKET技术将发送的命令传递到家庭控制中心（一款小型嵌入式设备），最后家庭控制中心作出相应的操作后返回操作完成确认信号，最终返回到用户界面，其通信流程如下：<br><img src="http://ww3.sinaimg.cn/large/006f3GNlgw1f17ys0405oj30dw09tdfy.jpg" alt="毕设数据结构"><br>]]>
    
    </summary>
    
      <category term="ajax" scheme="http://sgq.me/tags/ajax/"/>
    
      <category term="php" scheme="http://sgq.me/tags/php/"/>
    
      <category term="pipe" scheme="http://sgq.me/tags/pipe/"/>
    
      <category term="socket" scheme="http://sgq.me/tags/socket/"/>
    
      <category term="毕设" scheme="http://sgq.me/tags/%E6%AF%95%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开发PHP动态可装载模块]]></title>
    <link href="http://sgq.me/2014/10/14/php-dynamic-module/"/>
    <id>http://sgq.me/2014/10/14/php-dynamic-module/</id>
    <published>2014-10-14T01:52:00.000Z</published>
    <updated>2016-02-19T12:23:02.772Z</updated>
    <content type="html"><![CDATA[<p>因为这段时间项目要使用一些多线程和Socket技术，并且Socket会作为服务器在后台不间断运行，在综合考虑稳定性和效率性之后，决定用自定义扩展结合libevent库来做会更加适合一些。目前这一扩展还处在起步阶段，现在将这两天做的一些事情挂上来，一是给自己做一个备忘，其次也希望能够给接受小伙伴儿的指点。要想针对PHP开发动态的扩展，首先得看一下Laruence写的这篇博客：<a href="http://www.laruence.com/2009/04/28/719.html/comment-page-1" target="_blank" rel="external">用C/C++扩展你的PHP</a> 关于将扩展静态编译到PHP当中讲得非常的清楚和明白。所以我就写清楚动态的将扩展编译到PHP中就OK了。</p>
<ol>
<li>与编写静态扩展类似，在编译PHP源码之前，我们要建立DEF文件、利用ext_skel来生成对应的扩展骨架并修改config.m4文件中对应的位置。假设测试我们生成的扩展骨架的命名是“myfunctions”，这与Laruence博客中的命名一样。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PHP_ARG_ENABLE(myfunctions,whether toenable myfunctions support,</span><br><span class="line">[--enable-myfunctions Include myfunctions support])</span><br></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<ol>
<li><p>将生成的“myfunctions”文件夹拷贝到php源码外的任意目录并编译php源码。我的编译过程如下：(中间多指定了一下ini文件的目录，个人喜好)</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./buildconf</span><br><span class="line">./configure--prefix=/usr/<span class="built_in">local</span>/php5--with-config-file-path=/usr/<span class="built_in">local</span>/php5/etc</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>将php源码目录下两个类似php.ini-xxxxxxxx中任意一个的“-xxxxxxxxx”删除并复制到刚刚指定的“/usr/local/php5/etc”目录下。</p>
</li>
<li>上面三步就将所有的准备工作做好了，接下来就是进入刚刚拷贝出来的“myfunctions”文件夹中，按照Laruence博客中的方法进行扩展的编写了；</li>
<li>我们编写好扩展之后，我们进入“myfunctions”根目录，执行如下两条命令来配置我们的扩展包<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/php5/bin/phpize</span><br><span class="line">./configure--with-php-config=/usr/<span class="built_in">local</span>/php5/bin/php-config</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>最后安装就可以了<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></p>
<ol>
<li><p>此时它会提示你的so文件在哪，类似：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Installing shared extensions:/usr/<span class="built_in">local</span>/php5/lib/php/extensions/no-debug-non-zts-<span class="number">20090626</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>最后我们只需要在先前拷过去的php.ini文件中增加一句：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=<span class="string">"/usr/local/php5/lib/php/extensions/no-debug-non-zts-20090626/myfunctions.so"</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>就完成了扩展的一整套简单流程。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>因为这段时间项目要使用一些多线程和Socket技术，并且Socket会作为服务器在后台不间断运行，在综合考虑稳定性和效率性之后，决定用自定义扩展结合libevent库来做会更加适合一些。目前这一扩展还处在起步阶段，现在将这两天做的一些事情挂上来，一是给自己做一个备忘，其次也希望能够给接受小伙伴儿的指点。要想针对PHP开发动态的扩展，首先得看一下Laruence写的这篇博客：<a href="http://www.laruence.com/2009/04/28/719.html/comment-page-1">用C/C++扩展你的PHP</a> 关于将扩展静态编译到PHP当中讲得非常的清楚和明白。所以我就写清楚动态的将扩展编译到PHP中就OK了。</p>
<ol>
<li>与编写静态扩展类似，在编译PHP源码之前，我们要建立DEF文件、利用ext_skel来生成对应的扩展骨架并修改config.m4文件中对应的位置。假设测试我们生成的扩展骨架的命名是“myfunctions”，这与Laruence博客中的命名一样。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PHP_ARG_ENABLE(myfunctions,whether toenable myfunctions support,</span><br><span class="line">[--enable-myfunctions Include myfunctions support])</span><br></pre></td></tr></table></figure>
</li>
</ol>]]>
    
    </summary>
    
      <category term="module" scheme="http://sgq.me/tags/module/"/>
    
      <category term="php" scheme="http://sgq.me/tags/php/"/>
    
  </entry>
  
</feed>
