<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Ethan的博客]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://sgq.me/"/>
  <updated>2016-01-27T11:33:09.782Z</updated>
  <id>http://sgq.me/</id>
  
  <author>
    <name><![CDATA[Ethan]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[PHP中CURL使用HTTPS协议相关处理]]></title>
    <link href="http://sgq.me/2016/01/26/php-curl-https/"/>
    <id>http://sgq.me/2016/01/26/php-curl-https/</id>
    <published>2016-01-26T12:21:00.000Z</published>
    <updated>2016-01-27T11:33:09.782Z</updated>
    <content type="html"><![CDATA[<p>最近使用到HTTPS协议下的CURL，鉴于现在网上的信息都比较杂乱，没有比较全面合适的信息，故此进行相关的整理与说明。而具体HTTP和HTTPS在协议方面有哪些不同，我会在另外一篇文章里面进行大概的说明。</p>
<p>我们都比较熟悉CURL中HTTP协议的获取，当遇到HTTPS时，在初始化的设置方面就稍显复杂了。我们首先从HTTP的初始化说起。</p>
<p>在PHP的CURL中，使用HTTP协议时可以如下进行初始化,具体信息可以看<a href="http://php.net/manual/zh/book.curl.php" target="_blank" rel="external">手册</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="comment">// 创建一个新cURL资源</span></span><br><span class="line"><span class="variable">$ch</span> = curl_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置URL和相应的选项</span></span><br><span class="line"><span class="variable">$options</span> = <span class="keyword">array</span>(CURLOPT_URL =&gt; <span class="string">'http://www.example.com/'</span>,</span><br><span class="line">                 CURLOPT_HEADER =&gt; <span class="keyword">false</span></span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">curl_setopt_array(<span class="variable">$ch</span>, <span class="variable">$options</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抓取URL并把它传递给浏览器</span></span><br><span class="line">curl_exec(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭cURL资源，并且释放系统资源</span></span><br><span class="line">curl_close(<span class="variable">$ch</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>但是在使用HTTPS协议时，我们有一个准备工作首先要进行操作。<br><a id="more"></a></p>
<p>我们先要导出网站的SSL证书以便处理加密操作，在FireFox中可按照如下步骤进行</p>
<ol>
<li>进入证书查看</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/6ac54b93gw1f0e9a04mmpj20bb05bt97.jpg" alt="证书查看1"></p>
<p><img src="http://ww4.sinaimg.cn/large/6ac54b93gw1f0e9anijn8j20bl06c0tc.jpg" alt="证书查看2"></p>
<ol>
<li>选择需要导出的证书项</li>
</ol>
<p><img src="http://ww4.sinaimg.cn/large/6ac54b93gw1f0e9ccj33mj20gk0f6why.jpg" alt="选择需要导出的证书1"></p>
<p><img src="http://ww1.sinaimg.cn/large/6ac54b93gw1f0e9cy3gmej20fl0i0q4z.jpg" alt="选择需要倒数的证书2"></p>
<ol>
<li>选择导出的类型并进行存储</li>
</ol>
<p><img src="http://ww3.sinaimg.cn/large/6ac54b93gw1f0e9dstupmj20qi0et76v.jpg" alt="选择证书类型"></p>
<p>在导出完证书后，我们在curl_setopt_array的参数中只要设置该证书的文件地址就可以使用了，如果这个站点需要存储登录态的话还要设置cookie的文件地址，具体信息可查看如下代码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//详细文件地址</span></span><br><span class="line"><span class="variable">$caDir</span> = <span class="string">'....../GeoTrustGlobalCA.crt'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//存储cookie信息的文件地址</span></span><br><span class="line"><span class="variable">$cookieDir</span> = <span class="string">'......'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//URL地址</span></span><br><span class="line"><span class="variable">$url</span> = <span class="string">'https://www.zhihu.com/......'</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$defaultOpt</span> = <span class="keyword">array</span>(</span><br><span class="line">	CURLOPT_RETURNTRANSFER =&gt; <span class="keyword">true</span>,     <span class="comment">// return web page</span></span><br><span class="line">	CURLOPT_HEADER         =&gt; <span class="keyword">false</span>,    <span class="comment">// don't return headers</span></span><br><span class="line">	CURLOPT_FOLLOWLOCATION =&gt; <span class="keyword">true</span>,     <span class="comment">// follow redirects</span></span><br><span class="line">	CURLOPT_ENCODING       =&gt; <span class="string">""</span>,       <span class="comment">// handle all encodings</span></span><br><span class="line">	CURLOPT_USERAGENT      =&gt; <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.80 Safari/537.36"</span>,</span><br><span class="line">	CURLOPT_AUTOREFERER    =&gt; <span class="keyword">true</span>,     <span class="comment">// set referer on redirect</span></span><br><span class="line">	CURLOPT_CONNECTTIMEOUT =&gt; <span class="number">120</span>,      <span class="comment">// timeout on connect</span></span><br><span class="line">	CURLOPT_TIMEOUT        =&gt; <span class="number">120</span>,      <span class="comment">// timeout on response</span></span><br><span class="line">	CURLOPT_MAXREDIRS      =&gt; <span class="number">10</span>,       <span class="comment">// stop after 10 redirects</span></span><br><span class="line">	CURLOPT_SSL_VERIFYPEER =&gt; <span class="keyword">true</span>,     <span class="comment">// enabled SSL Cert checks</span></span><br><span class="line">	CURLOPT_SSL_VERIFYHOST =&gt; <span class="number">2</span>,</span><br><span class="line">	CURLOPT_CAINFO         =&gt; <span class="variable">$caDir</span>,</span><br><span class="line">	CURLOPT_COOKIEFILE     =&gt; <span class="variable">$cookieDir</span>,</span><br><span class="line">	CURLOPT_COOKIEJAR      =&gt; <span class="variable">$cookieDir</span>,</span><br><span class="line">	CURLOPT_URL			   =&gt; <span class="variable">$url</span>,</span><br><span class="line">	CURLOPT_HTTPGET		   =&gt; <span class="keyword">true</span>		<span class="comment">//method is GET</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$handle</span> = curl_init();</span><br><span class="line"></span><br><span class="line">curl_setopt_array(<span class="variable">$handle</span>,<span class="variable">$arrOpt</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$content</span> = curl_exec(<span class="variable">$handle</span>);</span><br><span class="line"><span class="variable">$err</span>     = curl_errno(<span class="variable">$handle</span>);</span><br><span class="line"><span class="variable">$errmsg</span>  = curl_error(<span class="variable">$handle</span>);</span><br><span class="line"><span class="variable">$header</span>  = curl_getinfo(<span class="variable">$handle</span>);</span><br><span class="line"></span><br><span class="line">curl_close(<span class="variable">$handle</span>);</span><br><span class="line"></span><br><span class="line">printf(<span class="string">"Content is %s"</span>, <span class="variable">$content</span>);</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>最近使用到HTTPS协议下的CURL，鉴于现在网上的信息都比较杂乱，没有比较全面合适的信息，故此进行相关的整理与说明。而具体HTTP和HTTPS在协议方面有哪些不同，我会在另外一篇文章里面进行大概的说明。</p>
<p>我们都比较熟悉CURL中HTTP协议的获取，当遇到HTTPS时，在初始化的设置方面就稍显复杂了。我们首先从HTTP的初始化说起。</p>
<p>在PHP的CURL中，使用HTTP协议时可以如下进行初始化,具体信息可以看<a href="http://php.net/manual/zh/book.curl.php">手册</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="comment">// 创建一个新cURL资源</span></span><br><span class="line"><span class="variable">$ch</span> = curl_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置URL和相应的选项</span></span><br><span class="line"><span class="variable">$options</span> = <span class="keyword">array</span>(CURLOPT_URL =&gt; <span class="string">'http://www.example.com/'</span>,</span><br><span class="line">                 CURLOPT_HEADER =&gt; <span class="keyword">false</span></span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">curl_setopt_array(<span class="variable">$ch</span>, <span class="variable">$options</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抓取URL并把它传递给浏览器</span></span><br><span class="line">curl_exec(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭cURL资源，并且释放系统资源</span></span><br><span class="line">curl_close(<span class="variable">$ch</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>但是在使用HTTPS协议时，我们有一个准备工作首先要进行操作。<br>]]>
    
    </summary>
    
      <category term="curl" scheme="http://sgq.me/tags/curl/"/>
    
      <category term="https" scheme="http://sgq.me/tags/https/"/>
    
      <category term="php" scheme="http://sgq.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP中多线程的使用（二）——内存管理方面的注意点]]></title>
    <link href="http://sgq.me/2016/01/25/php-pthread-memory/"/>
    <id>http://sgq.me/2016/01/25/php-pthread-memory/</id>
    <published>2016-01-25T03:09:00.000Z</published>
    <updated>2016-01-30T06:02:05.118Z</updated>
    <content type="html"><![CDATA[<p>在之前用C/C++开发软件的过程中，可以用线程来共享内存并实现大并发。所以我开发知乎的爬虫系统的时候很自然的就会想到使用共享内存来实现全局的队列，以防止重复爬取某一用户的相关信息。</p>
<p>但问题就出在这共享内存上。出于php中多线程安全方面的考虑，pthreads在启用多线程时默认是没有开启共享内存的。也就是说如果如下面这般是没有任何数据输出的。<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">global</span> <span class="variable">$object</span>, <span class="variable">$array</span>;</span><br><span class="line">		var_dump(<span class="variable">$object</span>, <span class="variable">$array</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> stdClass();</span><br><span class="line"><span class="variable">$object</span>-&gt;one = <span class="string">"one"</span>;</span><br><span class="line"><span class="variable">$object</span>-&gt;two = <span class="string">"two"</span>;</span><br><span class="line"><span class="variable">$object</span>-&gt;three = <span class="string">"three"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$test</span>-&gt;start();</span><br><span class="line"><span class="variable">$test</span>-&gt;join();</span><br></pre></td></tr></table></figure></p>
<p>php最重要的一个特性便是快速开发，因此我们要做的并不是很多，只要在 <code>start()</code> 中设置 <code>PTHREADS_INHERIT_ALL</code> 和 <code>PTHREADS_ALLOW_GLOBALS</code> 这两个参数就可以继承上下文、全局变量了</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">global</span> <span class="variable">$object</span>, <span class="variable">$array</span>;</span><br><span class="line">		var_dump(<span class="variable">$object</span>, <span class="variable">$array</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> stdClass();</span><br><span class="line"><span class="variable">$object</span>-&gt;one = <span class="string">"one"</span>;</span><br><span class="line"><span class="variable">$object</span>-&gt;two = <span class="string">"two"</span>;</span><br><span class="line"><span class="variable">$object</span>-&gt;three = <span class="string">"three"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$test</span>-&gt;start(PTHREADS_INHERIT_ALL | PTHREADS_ALLOW_GLOBALS);</span><br><span class="line"><span class="variable">$test</span>-&gt;join();</span><br></pre></td></tr></table></figure>
<p>但此处的全局变量在进入线程后处于线程安全方面的考虑，线程中保存的是原变量的副本，也就是说，各线程中对该变量的操作互相之间并不会产生影响。</p>
<p>因此，如果要实现线程之间的数据共享我想到的是可以使用一些同步机制外还可以使用redis来做数据同步。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在之前用C/C++开发软件的过程中，可以用线程来共享内存并实现大并发。所以我开发知乎的爬虫系统的时候很自然的就会想到使用共享内存来实现全局的队列，以防止重复爬取某一用户的相关信息。</p>
<p>但问题就出在这共享内存上。出于php中多线程安全方面的考虑，pthreads在启用多线程时默认是没有开启共享内存的。也就是说如果如下面这般是没有任何数据输出的。<br>]]>
    
    </summary>
    
      <category term="php" scheme="http://sgq.me/tags/php/"/>
    
      <category term="pthreads" scheme="http://sgq.me/tags/pthreads/"/>
    
      <category term="全局变量" scheme="http://sgq.me/tags/%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/"/>
    
      <category term="内存管理" scheme="http://sgq.me/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
      <category term="多线程" scheme="http://sgq.me/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP中多线程的使用（一）——pthreads的安装与调试]]></title>
    <link href="http://sgq.me/2016/01/25/windows-pthread/"/>
    <id>http://sgq.me/2016/01/25/windows-pthread/</id>
    <published>2016-01-25T01:48:00.000Z</published>
    <updated>2016-01-27T11:22:00.488Z</updated>
    <content type="html"><![CDATA[<p>近期为了获得真实的数据以便进行相关数据分析与计算，就开始考虑着从知乎获取一些问答数据，毕竟知乎回答的质量在国内各大社区中还算不错的了。一开始准备C++去开发的，虽然语言只是一种手段，但奈何时间紧、我对C++还不是非常熟悉。没办法，只能够用最熟的PHP顶上去，等以后有空了再迁移到C++吧。<br>在开发一开始就规划着使用多线程以便并发抓取，从实际情况来说这一功能是实现了的，但PHP利用pthreads实现的多线程在共享内存方面出于安全性的考虑，默认是没有开启共享内存的。这让我浪费了一点时间去解决问题，这我以后专门写一下吧。</p>
<p>这里主要完成windows平台中pthreads的安装与测试，因为通过我自己的测试，网上其他的好多文章都没办法成功呢，故专门写一篇。</p>
<p>关于Linux下面的扩展可以参考<a href="http://zyan.cc/pthreads/" target="_blank" rel="external">PHP真正多线程的使用</a>这篇文章,当然我以后也会在迁移的时候写一下。<br><a id="more"></a></p>
<h3 id="windows_u73AF_u5883_u4E0Bpthreads_u7248_u672C_u7684_u9009_u62E9"><a href="#windows_u73AF_u5883_u4E0Bpthreads_u7248_u672C_u7684_u9009_u62E9" class="headerlink" title="windows环境下pthreads版本的选择"></a>windows环境下pthreads版本的选择</h3><p>在选择pthreads的版本时需要注意一下几点：</p>
<ul>
<li>php本身的版本，php7及其以上的版本需要pthreads v3,而php5则只能够使用pthreads v2</li>
<li>通过查看phpinfo()查看是否是线程安全版（Thread Safety）。关于线程安全可以看Laruence的 <a href="http://www.laruence.com/2008/08/03/201.html" target="_blank" rel="external">揭秘TSRM</a> 以及Walu同学的 <a href="http://www.walu.cc/phpbook/1.4.md" target="_blank" rel="external">线程安全与非线程安全</a></li>
<li>在windows环境中需要考虑到其编译环境是vc9还是vc11</li>
</ul>
<p>通过查看phpinfo()获知我目前的环境是x64，php5.5，Thread Safety和MSVC11那么我们就去 <a href="http://windows.php.net/downloads/pecl/releases/pthreads/" target="_blank" rel="external">下载</a> pthreads-2.0.10-5.5-ts-vc11-x64</p>
<p><img src="http://ww4.sinaimg.cn/large/6ac54b93gw1f0awwxeds4j20gv0klq6p.jpg" alt="相关信息获取"></p>
<h3 id="pthreads_u7684_u5B89_u88C5"><a href="#pthreads_u7684_u5B89_u88C5" class="headerlink" title="pthreads的安装"></a>pthreads的安装</h3><p>在下载的压缩包中，主要使用到 php_pthreads.dll 和 pthreadVC2.dll 这两个文件。</p>
<p>pthreadVC2.dll 需要放置到如下目录中：</p>
<ul>
<li>php.exe 同等级的目录中</li>
<li>httpd.exe同等级的目录中</li>
</ul>
<p>php_pthreads.dll需要放置到php的扩展目录中，一般在 bin\php\ext 文件夹下面</p>
<p>同时需要在 apache 以及 php 两个目录下的php.ini文件中增加 <code>extension=php_pthreads.dll</code> 扩展(针对wamp而言)</p>
<h3 id="pthreads_u7684_u6D4B_u8BD5"><a href="#pthreads_u7684_u6D4B_u8BD5" class="headerlink" title="pthreads的测试"></a>pthreads的测试</h3><p>新建index.php文件并复制如下代码运行，若输出”Hello World”则说明安装成功。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AsyncOperation</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(<span class="variable">$arg</span>)</span></span>&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;arg = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$this</span>-&gt;arg)&#123;</span><br><span class="line">            printf(<span class="string">"Hello %s"</span>, <span class="variable">$this</span>-&gt;arg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$thread</span> = <span class="keyword">new</span> AsyncOperation(<span class="string">"World"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$thread</span>-&gt;start())</span><br><span class="line">    <span class="variable">$thread</span>-&gt;join();</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>近期为了获得真实的数据以便进行相关数据分析与计算，就开始考虑着从知乎获取一些问答数据，毕竟知乎回答的质量在国内各大社区中还算不错的了。一开始准备C++去开发的，虽然语言只是一种手段，但奈何时间紧、我对C++还不是非常熟悉。没办法，只能够用最熟的PHP顶上去，等以后有空了再迁移到C++吧。<br>在开发一开始就规划着使用多线程以便并发抓取，从实际情况来说这一功能是实现了的，但PHP利用pthreads实现的多线程在共享内存方面出于安全性的考虑，默认是没有开启共享内存的。这让我浪费了一点时间去解决问题，这我以后专门写一下吧。</p>
<p>这里主要完成windows平台中pthreads的安装与测试，因为通过我自己的测试，网上其他的好多文章都没办法成功呢，故专门写一篇。</p>
<p>关于Linux下面的扩展可以参考<a href="http://zyan.cc/pthreads/">PHP真正多线程的使用</a>这篇文章,当然我以后也会在迁移的时候写一下。<br>]]>
    
    </summary>
    
      <category term="php" scheme="http://sgq.me/tags/php/"/>
    
      <category term="pthreads" scheme="http://sgq.me/tags/pthreads/"/>
    
      <category term="多线程" scheme="http://sgq.me/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
</feed>
